apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: choosepath
spec:
  successfulJobsHistoryLimit: 4
  failedJobsHistoryLimit: 0
  schedule: "0 0 1,15 * *" # Runs At 00:00 on day-of-month 1 and 15.
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: postgres-backup
              image: db-image
              command:
                - /bin/sh
                - -c
                - |
                  mkdir -p /backup/$(date +%F)
                  PGPASSWORD=$POSTGRES_PASSWORD pg_dump \
                    -h $DB_HOST \
                    -U $POSTGRES_USER \
                    -d $POSTGRES_DB \
                    -F c > /backup/$(date +%F)/backup.sql

                  echo "Backup completed at /$(date +%F)/backup.sql"

                  # Cleanup old backups (older than 60 days)
                  find /backup -type f -name "*.sql" -mtime +60 -exec rm -f {} \;

                  echo "Cleanup completed."
              env:
                - name: DB_HOST
                  valueFrom:
                    configMapKeyRef:
                      name: common-configmap
                      key: postgres-db-host
                - name: POSTGRES_DB
                  valueFrom:
                    configMapKeyRef:
                      name: common-configmap
                      key: postgres-db
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: db-secrets
                      key: user
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: db-secrets
                      key: password
              volumeMounts:
                - name: backup-storage
                  mountPath: /backup
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: db-backup-pvc
          restartPolicy: OnFailure
